name: Upload to S3
on:
  push:
    branches:
      - dev

jobs:
  deploy_lambda:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Install dependencies and package Lambda code
    #   run: |
    #     pip install --upgrade pip
    #     pip install boto3

    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1 # Replace with your desired region
      run: |
        cd functions/abrigo
        zip -r abrigo.zip lambda_function.py # Zip the Lambda code
        aws s3 cp abrigo.zip s3://lambdagoooo/abrigo.zip

    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1 # Replace with your desired region
      run: |
        cd functions/cognito_auth_logging
        zip -r cognito.zip lambda_function.py # Zip the Lambda code
        aws s3 cp cognito.zip s3://lambdagoooo/cognito.zip


       

    # Add more steps as needed, such as updating the Terraform configuration.





# name: 'Build and upload to S3 Bucket'

# on:
#   push:
#     branches:
#       - main

# jobs:
#   Build_and_Upload:
#     permissions:
#       actions: write
#       contents: write
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: 'Generate Tag Version'
#         id: generate_tag_version
#         run: |
#           TAG=$(date +%Y%m%d)-$(date +%H%M%S)
#           echo "tag=$TAG" >> $GITHUB_OUTPUT
#           echo "Tag Version: $TAG" >> $GITHUB_STEP_SUMMARY
    
#       - name: 'Create Zip File'
#         id: 'create_package'
#         run: |
#           PACKAGE_NAME="${{ steps.generate_tag_version.outputs.tag }}.zip"
#           echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
#           zip -r $PACKAGE_NAME .


#       - name: 'Configure AWS Credentials'
#         uses: aws-actions/configure-aws-credentials@v1-node16
#         with:
#           aws-access-key-id: ${{ secrets.AWS_S3_BUCKET_USER_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_S3_BUCKET_USER_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_S3_BUCKET_REGION }}


#       - name: 'Upload to S3 Bucket'
#         run: aws s3 cp ${{ steps.create_package.outputs.package_name }} s3://${{ secrets.AWS_S3_BUCKET_NAME }}


